<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[H.Rathod Blog]]></title>
  <link href="http://hrathod.github.io/atom.xml" rel="self"/>
  <link href="http://hrathod.github.io/"/>
  <updated>2014-07-03T21:57:30-04:00</updated>
  <id>http://hrathod.github.io/</id>
  <author>
    <name><![CDATA[Himanshu Rathod]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[REST Resource With Optionals]]></title>
    <link href="http://hrathod.github.io/blog/2014/07/03/rest-resource-with-optionals/"/>
    <updated>2014-07-03T10:44:30-04:00</updated>
    <id>http://hrathod.github.io/blog/2014/07/03/rest-resource-with-optionals</id>
    <content type="html"><![CDATA[<p>One of the new classes added to Java 8 is
<a href="http://docs.oracle.com/javase/8/docs/api/java/util/Optional.html" title="java.util.Optional Javadocs">java.util.Optional</a>,
intended to reduce the errors surrounding the use of <em>null</em>.  One of the
recommended uses of the Optional class is the return value of a method that may
return a <em>null</em> value.</p>

<p>As an extension of this idea, it might be an interesting experiment to use
Optional return values from RESTful service resource methods, to indicate
when a resource may return a <em>null</em>.  A common scenario might be to pass
an ID to a resource method, which then looks up a resource by that ID.  What
if that resource does not exist?  Normally, the method would return <em>null</em>.
Instead, to document the fact that the method may return null, the Optional
class can be used.</p>

<!-- more -->


<p>The question becomes, then, how do we map Optional return values to correct HTTP
status codes?  The following experiment is one way to approach the problem.</p>

<p>Let&rsquo;s begin with the basic <a href="http://resteasy.jboss.org/" title="RESTEasy Website">RESTEasy</a>
web.xml setup.</p>

<figure class='code'><figcaption><span>web.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;!DOCTYPE web-app PUBLIC</span>
</span><span class='line'><span class="cp">     &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span>
</span><span class='line'><span class="cp">     &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;web-app&gt;</span>
</span><span class='line'>  <span class="nt">&lt;display-name&gt;</span>Example Webapp with RESTEasy and Optionals<span class="nt">&lt;/display-name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>resteasy<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-class&gt;</span>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher<span class="nt">&lt;/servlet-class&gt;</span>
</span><span class='line'>      <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-name&gt;</span>javax.ws.rs.Application<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-value&gt;</span>io.github.hrathod.blog.resteasy.SimpleApplication<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>  <span class="nt">&lt;servlet-mapping&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>resteasy<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet-mapping&gt;</span>
</span><span class='line'><span class="nt">&lt;/web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We simply set up the RESTEasy dispatch servlet, and configure it to use our
Application subclass.  The Application subclass in turn will configure RESTEasy
to use the various classes needed for setting up the services.</p>

<figure class='code'><figcaption><span>SimpleApplication.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashSet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.core.Application</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleApplication</span> <span class="kd">extends</span> <span class="n">Application</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">singletons</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">SimpleApplication</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">singletons</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleResource</span><span class="o">());</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">singletons</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">OptionalFilter</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="nf">getSingletons</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">singletons</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The SimpleApplication class simply registers two classes, a resource class
and a container filter.  The SimpleResource class is just a regular resource
class, with the normal annotations.</p>

<figure class='code'><figcaption><span>SimpleResource.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.GET</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Path</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.PathParam</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Produces</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.core.MediaType</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/simple&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleResource</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">final</span> <span class="n">SimpleDao</span> <span class="n">dao</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDao</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@GET</span>
</span><span class='line'>  <span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_PLAIN</span><span class="o">)</span>
</span><span class='line'>  <span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/{id}&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Optional</span><span class="o">&lt;</span><span class="n">SimpleModel</span><span class="o">&gt;</span> <span class="nf">get</span> <span class="o">(</span><span class="nd">@PathParam</span><span class="o">(</span><span class="s">&quot;id&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">dao</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The only interesting part of the SimpleResource class is that it returns an
Optional<SimpleModel> instead of simply returning a SimpleModel.  This is
nice documentation within the code that the method may return a response
with a <em>null</em> value.  Also notice that the DAO is returning an Optional
as well, which also indicates that a <em>null</em> may be returned if the
given id is not found.</p>

<p>The (slightly) more interesting class is OptionalFilter.  This class
converts an Optional return value from a resource method to the
appropriate HTTP status code and returns the correct entity.</p>

<figure class='code'><figcaption><span>OptionalFilter.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Optional</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.container.ContainerRequestContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.container.ContainerResponseContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.container.ContainerResponseFilter</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.core.Response</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.ext.Provider</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.jboss.resteasy.annotations.interception.ServerInterceptor</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Provider</span>
</span><span class='line'><span class="nd">@ServerInterceptor</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OptionalFilter</span> <span class="kd">implements</span> <span class="n">ContainerResponseFilter</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">filter</span><span class="o">(</span><span class="n">ContainerRequestContext</span> <span class="n">requestContext</span><span class="o">,</span> <span class="n">ContainerResponseContext</span> <span class="n">responseContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Object</span> <span class="n">entity</span> <span class="o">=</span> <span class="n">responseContext</span><span class="o">.</span><span class="na">getEntity</span><span class="o">();</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">Optional</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">isAssignableFrom</span><span class="o">(</span><span class="n">entity</span><span class="o">.</span><span class="na">getClass</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Optional</span><span class="o">&lt;?&gt;</span> <span class="n">optional</span> <span class="o">=</span> <span class="o">(</span><span class="n">Optional</span><span class="o">&lt;?&gt;)</span> <span class="n">entity</span><span class="o">;</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">optional</span><span class="o">.</span><span class="na">isPresent</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">responseContext</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="n">optional</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">responseContext</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>              <span class="n">responseContext</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="n">Response</span><span class="o">.</span><span class="na">Status</span><span class="o">.</span><span class="na">NO_CONTENT</span><span class="o">.</span><span class="na">getStatusCode</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The filter simply checks if the entity returned by the resource method is an
Optional.  If it is, the value is fetched from the Optional if it is present,
and set in the response.  If the value is not present, we alter the HTTP
status code of the response to a &ldquo;204 No Content&rdquo;, and set the entity to <em>null</em>.
The setting of the entity to <em>null</em> may not be entirely necessary, but since
&ldquo;No Content&rdquo; implies lack of content, it may be better to ensure the lack of
content.</p>

<p>A Maven project containing a working example is available from the
<a href="https://github.com/hrathod/resteasy-optionals" title="RESTEasy-Optionals">GitHub repo</a>.
To run it, clone the repo and use the jetty:run maven goal.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mvn jetty:run
</span></code></pre></td></tr></table></div></figure>


<p>Curl or Wget can be used to test the HTTP status codes.  If the ID is &ldquo;test&rdquo;, the
content should be delivered.  With any other ID, a &ldquo;No Content&rdquo; status should be
returned.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -v http://localhost:8080/simple/test
</span><span class='line'>* Adding handle: conn: 0x1b868b0
</span><span class='line'>* Adding handle: send: 0
</span><span class='line'>* Adding handle: recv: 0
</span><span class='line'>* Curl_addHandleToPipeline: length: 1
</span><span class='line'>* - Conn 0 <span class="o">(</span>0x1b868b0<span class="o">)</span> send_pipe: 1, recv_pipe: 0
</span><span class='line'>* About to connect<span class="o">()</span> to localhost port 8080 <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>*   Trying ::1...
</span><span class='line'>* Connected to localhost <span class="o">(</span>::1<span class="o">)</span> port 8080 <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>&gt; GET /simple/test HTTP/1.1
</span><span class='line'>&gt; User-Agent: curl/7.32.0
</span><span class='line'>&gt; Host: localhost:8080
</span><span class='line'>&gt; Accept: */*
</span><span class='line'>&gt;
</span><span class='line'>&lt; HTTP/1.1 200 OK
</span><span class='line'>&lt; Date: Thu, 03 Jul 2014 21:32:48 GMT
</span><span class='line'>&lt; Content-Type: text/plain
</span><span class='line'>&lt; Content-Length: 10
</span><span class='line'>* Server Jetty<span class="o">(</span>9.2.0.RC0<span class="o">)</span> is not blacklisted
</span><span class='line'>&lt; Server: Jetty<span class="o">(</span>9.2.0.RC0<span class="o">)</span>
</span><span class='line'>&lt;
</span><span class='line'>* Connection <span class="c">#0 to host localhost left intact</span>
</span><span class='line'><span class="nb">test </span>model
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -v http://localhost:8080/simple/foo
</span><span class='line'>* Adding handle: conn: 0x20a08b0
</span><span class='line'>* Adding handle: send: 0
</span><span class='line'>* Adding handle: recv: 0
</span><span class='line'>* Curl_addHandleToPipeline: length: 1
</span><span class='line'>* - Conn 0 <span class="o">(</span>0x20a08b0<span class="o">)</span> send_pipe: 1, recv_pipe: 0
</span><span class='line'>* About to connect<span class="o">()</span> to localhost port 8080 <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>*   Trying ::1...
</span><span class='line'>* Connected to localhost <span class="o">(</span>::1<span class="o">)</span> port 8080 <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>&gt; GET /simple/foo HTTP/1.1
</span><span class='line'>&gt; User-Agent: curl/7.32.0
</span><span class='line'>&gt; Host: localhost:8080
</span><span class='line'>&gt; Accept: */*
</span><span class='line'>&gt;
</span><span class='line'>&lt; HTTP/1.1 204 No Content
</span><span class='line'>&lt; Date: Thu, 03 Jul 2014 21:35:37 GMT
</span><span class='line'>&lt; Content-Type: text/plain
</span><span class='line'>* Server Jetty<span class="o">(</span>9.2.0.RC0<span class="o">)</span> is not blacklisted
</span><span class='line'>&lt; Server: Jetty<span class="o">(</span>9.2.0.RC0<span class="o">)</span>
</span><span class='line'>&lt;
</span><span class='line'>* Connection <span class="c">#0 to host localhost left intact</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
